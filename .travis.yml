language: python

python:
  - 2.7

cache: apt

# Build matrix: Run the three build systems and tests in parallel
env:
  global:
    - DEPENDS="gfortran-4.9 binutils"
    - CHECK_README_PROGS="yes"
  matrix:
      # CMake build with unit tests, no documentation
      # Allow to fail for now until tests are fixed
    - BUILD_SCRIPT="mkdir cmake-build && cd cmake-build && cmake -DENABLE_CODE_COVERAGE:BOOL=TRUE -DSKIP_DOC_GEN:BOOL=TRUE .. && make -j 4 && make test"
      SPECIFIC_DEPENDS="cmake nodejs"
      JLINT="yes"
      DOCS="no"
      FoBiS="no"

      # build with build.sh, make documentation, and do sniff test
    - BUILD_SCRIPT="./build.sh"
      SPECIFIC_DEPENDS=""
      JLINT="no"
      DOCS="yes"
      FoBiS="yes"
      CODE_COVERAGE="yes"

      # test scons build, no documentation or jsonlint, sniff test
    - BUILD_SCRIPT="scons && scons test"
      SPECIFIC_DEPENDS=""
      JLINT="no"
      DOCS="no"
      FoBiS="no"

before_install:
  - if [[ $CHECK_README_PROGS == [yY]* ]]; then wget http://people.sc.fsu.edu/~jburkardt/f_src/f90split/f90split.f90; fi
  - if [[ $DOCS == [yY]* ]]; then export DEPENDS="$DEPENDS exuberant-ctags"; fi
  - sudo apt-add-repository -y ppa:ubuntu-toolchain-r/test
  - if [[ $SPECIFIC_DEPENDS == *cmake* ]]; then sudo apt-add-repository -y ppa:kalakris/cmake; fi
  - if [[ $JLINT == [yY]* ]]; then curl -sL https://deb.nodesource.com/setup | sudo bash -; else sudo apt-get update -qq; fi
  - if [[ $DOCS == [yY]* ]]; then wget http://launchpadlibrarian.net/70968359/robodoc_4.99.41-1_amd64.deb; fi

install:
  - sudo apt-get install -y $SPECIFIC_DEPENDS $DEPENDS
  - if [[ $JLINT == [yY]* ]]; then sudo npm install -g jsonlint; fi
  - sudo ln -fs /usr/bin/gfortran-4.9 /usr/bin/gfortran && gfortran --version
  - if [[ $FoBiS == [yY]* ]]; then sudo -H pip install FoBiS.py==1.5.5 && FoBiS.py --version; fi
  - if [[ $DOCS == [yY]* ]]; then sudo dpkg -i robodoc_4.99.41-1_amd64.deb && robodoc --version; fi
  - if [[ $CHECK_README_PROGS == [yY]* ]]; then gfortran -o f90split f90split.f90 && ./f90split README.md && shopt -s extglob && for f in !(README|CONTRIBUTING).md; do mv $f src/tests/jf_test_${f%.md}.f90; done; rm f90split.f90 f90split; fi

script:
  - echo $BUILD_SCRIPT
  - echo $BUILD_SCRIPT | bash -

after_success:
  - cd $TRAVIS_BUILD_DIR
  - git config --global user.name "TRAVIS-CI-for-$(git --no-pager show -s --format='%cn' $TRAVIS_COMMIT)"
  - git config --global user.email "$(git --no-pager show -s --format='%ce' $TRAVIS_COMMIT)"
  - ./deploy.sh #handles updating documentation for master branch as well as tags
