digraph "proc~~parse_string~~CallsGraph" {
	graph [concentrate=true rankdir=LR size="8.90625,1000.0"]
	node [fontname=Helvetica fontsize=10.5 height=0.0 margin=0.08 shape=box]
	edge [fontname=Helvetica fontsize=9.5]
		"proc~parse_string" [label=parse_string]
		graph [concentrate=false]
		"proc~pop_char" [label=pop_char URL="../proc/pop_char.html" color="#d94e8f" fontcolor=white style=filled]
		"proc~valid_json_hex" [label=valid_json_hex URL="../proc/valid_json_hex.html" color="#d94e8f" fontcolor=white style=filled]
		"interface~throw_exception" [label=throw_exception URL="../interface/throw_exception.html" color="#A7506F" fontcolor=white style=filled]
		graph [concentrate=false]
		graph [concentrate=false]
		graph [concentrate=false]
		graph [concentrate=false]
		graph [concentrate=false]
		graph [concentrate=false]
		"proc~json_throw_exception" [label=json_throw_exception URL="../proc/json_throw_exception.html" color="#d9534f" fontcolor=white style=filled]
		"proc~wrap_json_throw_exception" [label=wrap_json_throw_exception URL="../proc/wrap_json_throw_exception.html" color="#d9534f" fontcolor=white style=filled]
		graph [concentrate=false]
		graph [concentrate=false]
		graph [concentrate=false]
		"interface~to_unicode" [label=to_unicode URL="../interface/to_unicode.html" color="#A7506F" fontcolor=white style=filled]
		graph [concentrate=false]
		graph [concentrate=false]
		"proc~to_uni_vec" [label=to_uni_vec URL="../proc/to_uni_vec.html" color="#d94e8f" fontcolor=white style=filled]
		"proc~to_uni" [label=to_uni URL="../proc/to_uni.html" color="#d94e8f" fontcolor=white style=filled]
		graph [concentrate=false]
		graph [concentrate=false]
		graph [concentrate=false]
		graph [concentrate=false]
		graph [concentrate=false]
			"interface~to_unicode" -> "proc~to_uni_vec" [style=dashed]
			"interface~to_unicode" -> "proc~to_uni" [style=dashed]
			"proc~wrap_json_throw_exception" -> "proc~json_throw_exception"
			"proc~wrap_json_throw_exception" -> "interface~to_unicode"
		graph [concentrate=false]
			"interface~throw_exception" -> "proc~json_throw_exception" [style=dashed]
			"interface~throw_exception" -> "proc~wrap_json_throw_exception" [style=dashed]
			"proc~parse_string" -> "proc~pop_char"
			"proc~parse_string" -> "proc~valid_json_hex"
			"proc~parse_string" -> "interface~throw_exception"
		graph [concentrate=false]
}